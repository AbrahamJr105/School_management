# Generated by Django 5.1.3 on 2025-06-01 21:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address of the teacher', max_length=254, unique=True)),
                ('numero', models.IntegerField(help_text='Teacher identification number', unique=True)),
                ('civilite', models.CharField(choices=[('Mr', 'Monsieur'), ('Mrs', 'Madame'), ('Ms', 'Mademoiselle')], max_length=20, verbose_name='Civility')),
                ('nom', models.CharField(max_length=255, verbose_name='Last Name')),
                ('prenom', models.CharField(max_length=255, verbose_name='First Name')),
                ('adresse', models.TextField(default='Address not provided', verbose_name='Address')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('lieu_naissance', models.CharField(default='Not specified', max_length=255, verbose_name='Place of Birth')),
                ('pays', models.CharField(max_length=255, verbose_name='Country')),
                ('grade', models.CharField(choices=[('Assistant', 'Assistant'), ('MAB', 'Maître Assistant B'), ('MAA', 'Maître Assistant A'), ('MCB', 'Maître de Conférences B'), ('MCA', 'Maître de Conférences A'), ('Professeur', 'Professeur')], max_length=255, verbose_name='Academic Grade')),
                ('specialite', models.CharField(choices=[('Informatique', 'Informatique'), ('Mathématiques', 'Mathématiques'), ('Anglais', 'Anglais'), ('Physique', 'Physique'), ('Chimie', 'Chimie'), ('autres', 'Autres')], max_length=255, verbose_name='Specialty')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filiere_inscription', models.CharField(max_length=255, unique=True, verbose_name='Field of Study')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Filière',
                'verbose_name_plural': 'Filières',
                'ordering': ['filiere_inscription'],
            },
        ),
        migrations.CreateModel(
            name='Nationalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Country Code')),
                ('nationalite', models.CharField(max_length=255, unique=True, verbose_name='Nationality')),
            ],
            options={
                'verbose_name': 'Nationalité',
                'verbose_name_plural': 'Nationalités',
                'ordering': ['nationalite'],
            },
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport', models.CharField(max_length=255, unique=True, verbose_name='Sport Name')),
            ],
            options={
                'verbose_name': 'Sport',
                'verbose_name_plural': 'Sports',
                'ordering': ['sport'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Module Name')),
                ('coefficient', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Coefficient')),
                ('horaire', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Hours per Week')),
                ('enseignant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='modules', to='myapp.enseignant', verbose_name='Teacher')),
                ('filiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='myapp.filiere', verbose_name='Field of Study')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['filiere', 'name'],
                'unique_together': {('name', 'filiere')},
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civilite', models.CharField(choices=[('Mr', 'Monsieur'), ('Mrs', 'Madame'), ('Ms', 'Mademoiselle')], max_length=20, verbose_name='Civility')),
                ('nom_pre', models.CharField(max_length=255, verbose_name='Full Name')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('adresse', models.TextField(verbose_name='Address')),
                ('cod_post', models.CharField(max_length=10, verbose_name='Postal Code')),
                ('localite', models.CharField(max_length=255, verbose_name='City')),
                ('pays', models.CharField(max_length=255, verbose_name='Country')),
                ('plat_form', models.CharField(help_text='Comma-separated platforms', max_length=255, verbose_name='Platforms')),
                ('applications', models.CharField(help_text='Comma-separated applications', max_length=255, verbose_name='Applications')),
                ('image', models.ImageField(blank=True, null=True, upload_to='students/', verbose_name='Photo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filiere', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.filiere', verbose_name='Field of Study')),
                ('nationalite', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.nationalite', verbose_name='Nationality')),
                ('sports', models.ManyToManyField(blank=True, to='myapp.sport', verbose_name='Sports')),
            ],
            options={
                'verbose_name': 'Étudiant',
                'verbose_name_plural': 'Étudiants',
                'ordering': ['nom_pre'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Grade')),
                ('date_evaluation', models.DateField(auto_now_add=True, verbose_name='Evaluation Date')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='myapp.etudiant', verbose_name='Student')),
                ('filiere', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='myapp.filiere', verbose_name='Field of Study')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='myapp.module', verbose_name='Module')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-date_evaluation'],
                'unique_together': {('etudiant', 'module')},
            },
        ),
    ]
